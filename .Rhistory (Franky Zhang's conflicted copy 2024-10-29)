latest_immunology, latest_immunology2,
age_cat, sex,
immune_type, immune_type2)
df1 <- df |> select(GNO, S_num_S1, latest_immunology, age_cat, sex, immune_type)
df2 <- df |> select(GNO, S_num_S2, latest_immunology2, age_cat, sex, immune_type2)
cols <- c("ID", "S_ab", "latest_immunology", "age", "sex", "immune_type")
colnames(df1) <- cols
colnames(df2) <- cols
df3 <- rbind(df1, df2)
# df3 <- df |> select(GNO,
#                     S_num_S1,
#                     latest_immunology,
#                     age_cat, sex,
#                     immune_type)
#
# colnames(df3)[2] <- "S_ab"
# colnames(df3)[1] <- "ID"
# colnames(df3)[4] <- "age"
df3 <- df3 %>% filter(!(immune_type == "hybrid-induced" & latest_immunology >= 420 & latest_immunology < 450 & S_ab > 20000))
# saveRDS(df3, file = "Code/TempData/Oct09_TrajectoryPlotsData.rds")
# ######################
# ######## end #########
# ######################
plot_data <- function(data){
# data <- df
data <- data %>% filter(S_ab > .8)
data <- data %>%
select(ID, S_ab, latest_immunology, age, sex, immune_type) %>%
mutate(latest_immunology_cat = case_when(
is.na(latest_immunology) ~ "no_event",
latest_immunology < 30 ~ "1",
latest_immunology >= 30 & latest_immunology < 60 ~ "2",
latest_immunology >= 60 & latest_immunology < 90 ~ "3",
latest_immunology >= 90 & latest_immunology < 120 ~ "4",
latest_immunology >= 120 & latest_immunology < 150 ~ "5",
latest_immunology >= 150 & latest_immunology < 180 ~ "6",
latest_immunology >= 180 & latest_immunology < 210 ~ "7",
latest_immunology >= 210 & latest_immunology < 240 ~ "8",
latest_immunology >= 240 & latest_immunology < 270 ~ "9",
latest_immunology >= 270 & latest_immunology < 300 ~ "10",
latest_immunology >= 300 & latest_immunology < 330 ~ "11",
latest_immunology >= 330 & latest_immunology < 360 ~ "12",
latest_immunology >= 360 & latest_immunology < 390 ~ "13",
latest_immunology >= 390 & latest_immunology < 420 ~ "14",
latest_immunology >= 420 & latest_immunology < 450 ~ "15",
TRUE ~ "over15"
)) %>%
mutate(latest_immunology_cat = factor(latest_immunology_cat, levels = c(
"no_event", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10",
"11", "12", "13", "14", "15",
"over15"
))) %>%
filter(latest_immunology_cat != "no_event")
df_summary <- data %>%
group_by(latest_immunology_cat, immune_type
, age
) %>%
summarize(mean_S_ab = mean(S_ab, na.rm = TRUE),
sd_S_ab = sd(S_ab, na.rm = TRUE),  # Calculate standard deviation
.groups = 'drop') %>%
mutate(ymin = pmax(mean_S_ab - sd_S_ab, 0.1),  # Ensure ymin is positive and non-zero
ymax = mean_S_ab + sd_S_ab) %>%
na.omit()  # Remove NAs that may result from sd calculation
# Round mean values to integer for labels
df_summary$mean_S_ab <- round(df_summary$mean_S_ab)
df_summary$ymin <- round(df_summary$ymin)
df_summary$ymax <- round(df_summary$ymax)
return(df_summary)
}
# load the aforementioned data
url <- "Code/TempData/Oct09_TrajectoryPlotsData.rds"
df <- readRDS(url)
# Define the colors for the groups
colors <- c("#ADD8E6", "#6495ED", "#0000FF", "#191970", "#FFA07A", "#FF6347", "#DC143C", "#800000")
labels <- c("hybrid-induced, <20", "hybrid-induced, 20-40", "hybrid-induced, 40-60", "hybrid-induced, >60",
"vac-induced, <20", "vac-induced, 20-40", "vac-induced, 40-60", "vac-induced, >60")
plot_df <- plot_data(df)
# plot_df <- plot_data(df3)
# Filter the vac- and hybrid- groups
plot_df_vac <- plot_df %>% filter(immune_type == "vac-induced")
plot_df_hybrid <- plot_df %>% filter(immune_type == "hybrid-induced")
plot_df.avg_hybrid <- plot_df_hybrid |> group_by(latest_immunology_cat) |> summarise(mean_S_ab.avg = mean(mean_S_ab))
plot_df.avg_vac <- plot_df_vac |> group_by(latest_immunology_cat) |> summarise(mean_S_ab.avg = mean(mean_S_ab))
# check the sudden drop
df %>% filter(immune_type == "vac-induced" & latest_immunology > 60 & latest_immunology < 90)
df %>% filter(immune_type == "vac-induced" & latest_immunology > 90 & latest_immunology < 120)
# Plot 1: Hybrid-induced group (individual points and lines)
plot1 <- ggplot(plot_df_hybrid, aes(x = latest_immunology_cat, y = mean_S_ab)) +
geom_point(aes(color = age), size = 3) +
geom_line(aes(group = age, color = age)) +
scale_color_manual(values = c("<20" = "#ADD8E6",
"20-40" = "#6495ED",
"40-60" = "#0000FF",
">60" = "#00008B")) +
theme_bw() +
theme(legend.position = c(0.95, 0.95),
legend.justification = c("right", "top"),
plot.title = element_blank()) +  # Remove individual titles
ylim(0, 25000) +
labs(x = "Time Since the Latest Immunology (month)", y = "S Antibody Level") +
theme(panel.grid.major = element_blank())
# Plot 2: Vaccine-induced group (individual points and lines)
plot2 <- ggplot(plot_df_vac, aes(x = latest_immunology_cat, y = mean_S_ab)) +
geom_point(aes(color = age), size = 3) +
geom_line(aes(group = age, color = age)) +
scale_color_manual(values = c("<20" = "#FFA07A",
"20-40" = "#FF6347",
"40-60" = "#DC143C",
">60" = "#800000")) +
theme_bw() +
theme(legend.position = c(0.95, 0.95),
legend.justification = c("right", "top"),
plot.title = element_blank()) +  # Remove individual titles
ylim(0, 25000) +
labs(x = "Time Since the Latest Immunology (month)", y = "S Antibody Level") +
theme(panel.grid.major = element_blank())
# Plot 3: Hybrid-induced group (average line)
plot3 <- ggplot(plot_df.avg_hybrid, aes(x = latest_immunology_cat, y = mean_S_ab.avg, group = 1)) +
geom_point(size = 3, color = "#0000FF") +
geom_line(color = "#0000FF") +
theme_bw() +
theme(legend.position = "none", # Hide legend for this plot
plot.title = element_blank()) +  # Remove individual titles
ylim(0, 25000) +
labs(x = "Time Since the Latest Immunology (month)", y = "S Antibody Level") +
theme(panel.grid.major = element_blank())
# Plot 4: Vaccine-induced group (average line)
plot4 <- ggplot(plot_df.avg_vac, aes(x = latest_immunology_cat, y = mean_S_ab.avg, group = 1)) +
geom_point(size = 3, color = "#DC143C") +
geom_line(color = "#DC143C") +
theme_bw() +
theme(legend.position = "none", # Hide legend for this plot
plot.title = element_blank()) +  # Remove individual titles
ylim(0, 25000) +
labs(x = "Time Since the Latest Immunology (month)", y = "S Antibody Level") +
theme(panel.grid.major = element_blank())
# Combine the four plots, with "Hybrid-induced" on the left and "Vaccine-induced" on the right, titles at the top
combined_plot <- grid.arrange(
arrangeGrob(plot3, plot1, ncol = 1, top = textGrob("Hybrid-induced", gp = gpar(fontsize = 18, fontface = "bold"), hjust = 0.5)),
arrangeGrob(plot4, plot2, ncol = 1, top = textGrob("Vaccine-induced", gp = gpar(fontsize = 18, fontface = "bold"), hjust = 0.5)),
ncol = 2
)
plot_df.avg_hybrid
plot_df_vac
plot_df_hybrid
plot_data <- function(data){
# data <- df
data <- data %>% filter(S_ab > .8)
data <- data %>%
select(ID, S_ab, latest_immunology, age, sex, immune_type) %>%
mutate(latest_immunology_cat = case_when(
is.na(latest_immunology) ~ "no_event",
latest_immunology < 30 ~ "1",
latest_immunology >= 30 & latest_immunology < 60 ~ "2",
latest_immunology >= 60 & latest_immunology < 90 ~ "3",
latest_immunology >= 90 & latest_immunology < 120 ~ "4",
latest_immunology >= 120 & latest_immunology < 150 ~ "5",
latest_immunology >= 150 & latest_immunology < 180 ~ "6",
latest_immunology >= 180 & latest_immunology < 210 ~ "7",
latest_immunology >= 210 & latest_immunology < 240 ~ "8",
latest_immunology >= 240 & latest_immunology < 270 ~ "9",
latest_immunology >= 270 & latest_immunology < 300 ~ "10",
latest_immunology >= 300 & latest_immunology < 330 ~ "11",
latest_immunology >= 330 & latest_immunology < 360 ~ "12",
latest_immunology >= 360 & latest_immunology < 390 ~ "13",
latest_immunology >= 390 & latest_immunology < 420 ~ "14",
latest_immunology >= 420 & latest_immunology < 450 ~ "15",
TRUE ~ "over15"
)) %>%
mutate(latest_immunology_cat = factor(latest_immunology_cat, levels = c(
"no_event", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10",
"11", "12", "13", "14", "15",
"over15"
))) %>%
filter(latest_immunology_cat != "no_event")
# df_summary <- data %>%
#   group_by(latest_immunology_cat, immune_type, age
#   ) %>%
#   summarize(mean_S_ab = mean(S_ab, na.rm = TRUE),
#             sd_S_ab = sd(S_ab, na.rm = TRUE),
#             .groups = 'drop') %>%
#   mutate(ymin = pmax(mean_S_ab - sd_S_ab, 0.1),
#          ymax = mean_S_ab + sd_S_ab) %>%
#   na.omit()
df_summary <- data %>%
group_by(latest_immunology_cat, age
) %>%
summarize(mean_S_ab = mean(S_ab, na.rm = TRUE),
sd_S_ab = sd(S_ab, na.rm = TRUE),
.groups = 'drop') %>%
mutate(ymin = pmax(mean_S_ab - sd_S_ab, 0.1),
ymax = mean_S_ab + sd_S_ab) %>%
na.omit()
# Round mean values to integer for labels
df_summary$mean_S_ab <- round(df_summary$mean_S_ab)
df_summary$ymin <- round(df_summary$ymin)
df_summary$ymax <- round(df_summary$ymax)
return(df_summary)
}
# load the aforementioned data
url <- "Code/TempData/Oct09_TrajectoryPlotsData.rds"
df <- readRDS(url)
# Define the colors for the groups
colors <- c("#ADD8E6", "#6495ED", "#0000FF", "#191970", "#FFA07A", "#FF6347", "#DC143C", "#800000")
labels <- c("hybrid-induced, <20", "hybrid-induced, 20-40", "hybrid-induced, 40-60", "hybrid-induced, >60",
"vac-induced, <20", "vac-induced, 20-40", "vac-induced, 40-60", "vac-induced, >60")
plot_df <- plot_data(df)
plot_df
plot_df.avg <- plot_df
plot_df.avg
plot_df.avg.mean <- plot_df.avg %>% group_by(latest_immunology_cat) %>% summarise(mean_S_ab.avg = mean(mean_S_ab))
plot_df.avg.mean
plot_df_vac
plot_df_hybrid
plot_df.avg_hybrid
plot_df.avg_vac
plot_data <- function(data){
# data <- df
data <- data %>% filter(S_ab > .8)
data <- data %>%
select(ID, S_ab, latest_immunology, age, sex, immune_type) %>%
mutate(latest_immunology_cat = case_when(
is.na(latest_immunology) ~ "no_event",
latest_immunology < 30 ~ "1",
latest_immunology >= 30 & latest_immunology < 60 ~ "2",
latest_immunology >= 60 & latest_immunology < 90 ~ "3",
latest_immunology >= 90 & latest_immunology < 120 ~ "4",
latest_immunology >= 120 & latest_immunology < 150 ~ "5",
latest_immunology >= 150 & latest_immunology < 180 ~ "6",
latest_immunology >= 180 & latest_immunology < 210 ~ "7",
latest_immunology >= 210 & latest_immunology < 240 ~ "8",
latest_immunology >= 240 & latest_immunology < 270 ~ "9",
latest_immunology >= 270 & latest_immunology < 300 ~ "10",
latest_immunology >= 300 & latest_immunology < 330 ~ "11",
latest_immunology >= 330 & latest_immunology < 360 ~ "12",
latest_immunology >= 360 & latest_immunology < 390 ~ "13",
latest_immunology >= 390 & latest_immunology < 420 ~ "14",
latest_immunology >= 420 & latest_immunology < 450 ~ "15",
TRUE ~ "over15"
)) %>%
mutate(latest_immunology_cat = factor(latest_immunology_cat, levels = c(
"no_event", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10",
"11", "12", "13", "14", "15",
"over15"
))) %>%
filter(latest_immunology_cat != "no_event")
df_summary <- data %>%
group_by(latest_immunology_cat, immune_type, age
) %>%
summarize(mean_S_ab = mean(S_ab, na.rm = TRUE),
sd_S_ab = sd(S_ab, na.rm = TRUE),
.groups = 'drop') %>%
mutate(ymin = pmax(mean_S_ab - sd_S_ab, 0.1),
ymax = mean_S_ab + sd_S_ab) %>%
na.omit()
# df_summary <- data %>%
#   group_by(latest_immunology_cat, age
#   ) %>%
#   summarize(mean_S_ab = mean(S_ab, na.rm = TRUE),
#             sd_S_ab = sd(S_ab, na.rm = TRUE),
#             .groups = 'drop') %>%
#   mutate(ymin = pmax(mean_S_ab - sd_S_ab, 0.1),
#          ymax = mean_S_ab + sd_S_ab) %>%
#   na.omit()
# Round mean values to integer for labels
df_summary$mean_S_ab <- round(df_summary$mean_S_ab)
df_summary$ymin <- round(df_summary$ymin)
df_summary$ymax <- round(df_summary$ymax)
return(df_summary)
}
# load the aforementioned data
url <- "Code/TempData/Oct09_TrajectoryPlotsData.rds"
df <- readRDS(url)
# Define the colors for the groups
colors <- c("#ADD8E6", "#6495ED", "#0000FF", "#191970", "#FFA07A", "#FF6347", "#DC143C", "#800000")
labels <- c("hybrid-induced, <20", "hybrid-induced, 20-40", "hybrid-induced, 40-60", "hybrid-induced, >60",
"vac-induced, <20", "vac-induced, 20-40", "vac-induced, 40-60", "vac-induced, >60")
plot_df <- plot_data(df)
# plot_df <- plot_data(df3)
# Filter the vac- and hybrid- groups
plot_df_vac <- plot_df %>% filter(immune_type == "vac-induced")
plot_df_hybrid <- plot_df %>% filter(immune_type == "hybrid-induced")
plot_df.avg_hybrid <- plot_df_hybrid |> group_by(latest_immunology_cat) |> summarise(mean_S_ab.avg = mean(mean_S_ab))
plot_df.avg_vac <- plot_df_vac |> group_by(latest_immunology_cat) |> summarise(mean_S_ab.avg = mean(mean_S_ab))
plot_df_vac
plot_df_hybrid
plot_df.avg_hybrid
plot_df.avg_vac
ggplot(plot_df.avg, aes(x = latest_immunology_cat, y = mean_S_ab.avg, group = 1)) +
geom_point(size = 3, color = "black") +
geom_line(color = "black") +
theme_bw() +
theme(legend.position = "none", # Hide legend for this plot
plot.title = element_blank()) +  # Remove individual titles
ylim(0, 25000) +
labs(x = "Time Since the Latest Immunology (month)", y = "S Antibody Level") +
theme(panel.grid.major = element_blank())
plot5 <- ggplot(plot_df.avg.mean, aes(x = latest_immunology_cat, y = mean_S_ab.avg, group = 1)) +
geom_point(size = 3, color = "black") +
geom_line(color = "black") +
theme_bw() +
theme(legend.position = "none", # Hide legend for this plot
plot.title = element_blank()) +  # Remove individual titles
ylim(0, 25000) +
labs(x = "Time Since the Latest Immunology (month)", y = "S Antibody Level") +
theme(panel.grid.major = element_blank())
plot5
plot6 <- ggplot(plot_df.avg, aes(x = latest_immunology_cat, y = mean_S_ab)) +
geom_point(aes(color = age), size = 3) +
geom_line(aes(group = age, color = age)) +
scale_color_manual(values = c("<20" = "#D3D3D3",
"20-40" = "#A9A9A9",
"40-60" = "#696969",
">60" = "#2F4F4F")) +
theme_bw() +
theme(legend.position = c(0.95, 0.95),
legend.justification = c("right", "top"),
plot.title = element_blank()) +  # Remove individual titles
ylim(0, 25000) +
labs(x = "Time Since the Latest Immunology (month)", y = "S Antibody Level") +
theme(panel.grid.major = element_blank())
plot6
plot5 <- ggplot(plot_df.avg.mean, aes(x = latest_immunology_cat, y = mean_S_ab.avg, group = 1)) +
geom_point(size = 3, color = "green") +
geom_line(color = "green") +
theme_bw() +
theme(legend.position = "none", # Hide legend for this plot
plot.title = element_blank()) +  # Remove individual titles
ylim(0, 25000) +
labs(x = "Time Since the Latest Immunology (month)", y = "S Antibody Level") +
theme(panel.grid.major = element_blank())
plot6 <- ggplot(plot_df.avg, aes(x = latest_immunology_cat, y = mean_S_ab)) +
geom_point(aes(color = age), size = 3) +
geom_line(aes(group = age, color = age)) +
scale_color_manual(values = c("<20" = "#90EE90",
"20-40" = "#3CB371",
"40-60" = "#228B22",
">60" = "#006400")) +
theme_bw() +
theme(legend.position = c(0.95, 0.95),
legend.justification = c("right", "top"),
plot.title = element_blank()) +  # Remove individual titles
ylim(0, 25000) +
labs(x = "Time Since the Latest Immunology (month)", y = "S Antibody Level") +
theme(panel.grid.major = element_blank())
plot6
plot5
plot5 <- ggplot(plot_df.avg.mean, aes(x = latest_immunology_cat, y = mean_S_ab.avg, group = 1)) +
geom_point(size = 3, color = "#32CD32") +
geom_line(color = "#32CD32") +
theme_bw() +
theme(legend.position = "none", # Hide legend for this plot
plot.title = element_blank()) +  # Remove individual titles
ylim(0, 25000) +
labs(x = "Time Since the Latest Immunology (month)", y = "S Antibody Level") +
theme(panel.grid.major = element_blank())
plot6 <- ggplot(plot_df.avg, aes(x = latest_immunology_cat, y = mean_S_ab)) +
geom_point(aes(color = age), size = 3) +
geom_line(aes(group = age, color = age)) +
scale_color_manual(values = c("<20" = "#90EE90",
"20-40" = "#3CB371",
"40-60" = "#228B22",
">60" = "#006400")) +
theme_bw() +
theme(legend.position = c(0.95, 0.95),
legend.justification = c("right", "top"),
plot.title = element_blank()) +  # Remove individual titles
ylim(0, 25000) +
labs(x = "Time Since the Latest Immunology (month)", y = "S Antibody Level") +
theme(panel.grid.major = element_blank())
# Combine the four plots, with "Hybrid-induced" on the left and "Vaccine-induced" on the right, titles at the top
combined_plot <- grid.arrange(
arrangeGrob(plot5, plot6, ncol = 1, top = textGrob("Hybrid & Vaccine Combined", gp = gpar(fontsize = 18, fontface = "bold"), hjust = 0.5)),
arrangeGrob(plot3, plot1, ncol = 1, top = textGrob("Hybrid-induced", gp = gpar(fontsize = 18, fontface = "bold"), hjust = 0.5)),
arrangeGrob(plot4, plot2, ncol = 1, top = textGrob("Vaccine-induced", gp = gpar(fontsize = 18, fontface = "bold"), hjust = 0.5)),
ncol = 2
)
# Combine the four plots, with "Hybrid-induced" on the left and "Vaccine-induced" on the right, titles at the top
combined_plot <- grid.arrange(
arrangeGrob(plot5, plot6, ncol = 1, top = textGrob("Hybrid & Vaccine Combined", gp = gpar(fontsize = 18, fontface = "bold"), hjust = 0.5)),
arrangeGrob(plot3, plot1, ncol = 1, top = textGrob("Hybrid-induced", gp = gpar(fontsize = 18, fontface = "bold"), hjust = 0.5)),
arrangeGrob(plot4, plot2, ncol = 1, top = textGrob("Vaccine-induced", gp = gpar(fontsize = 18, fontface = "bold"), hjust = 0.5)),
ncol = 3
)
ggsave("Results/plots_updated/fig2_complete.pdf", plot = combined_plot, width = 15, height = 8)
library(dplyr)
library(lubridate)
library(ggplot2)
library(magrittr)
library(ggsurvfit)
library(survminer)
library(survival)
# load data
url <- "Code/TempData/cox_hazard_data.rds"
data <- readRDS(url)
data <- data %>%
mutate(time = ifelse(between_S1_S2_infec_cat == "yes", latest_immunology + infec_gap_after_S1, latest_immunology + gap_between_surveys),
status = ifelse(between_S1_S2_infec_cat == "yes", 1, 0)) |>
mutate(age_category = case_when(
age_base < 20 ~ "<20",
age_base >= 20 & age_base <= 40 ~ "20-40",
age_base > 40 & age_base <= 60 ~ "40-60",
age_base > 60 ~ ">60"))
data$immune_type <- factor(
data$immune_type,
levels = c("hybrid-induced", "vac-induced")
)
table(data$immune_type, data$age_category)
# Fit the survival model
fit <- survfit(Surv(time / 30, status) ~ immune_type + age_category, data = data)
# Define the colors for the groups
colors <- c(
"#ADD8E6", "#6495ED",  # Blue shades for "hybrid-induced"
"#0000FF", "#00008B",
"#FFA07A", "#FF6347",  # Red shades for "vac-induced"
"#DC143C", "#800000"
)
# Define the labels for the groups
labels <- c(
"hybrid-induced, <20",
"hybrid-induced, 20-40",
"hybrid-induced, 40-60",
"hybrid-induced, >60",
"vac-induced, <20",
"vac-induced, 20-40",
"vac-induced, 40-60",
"vac-induced, >60"
)
# Visualize the result
ggsurv <- ggsurvplot(
fit = fit,
data = data,
risk.table = TRUE,
risk.table.col = "strata",
risk.table.height = 0.25,
risk.table.y.text.col = TRUE,
risk.table.y.text = TRUE,
ncensor.plot = TRUE,
ncensor.plot.height = 0.25,
pval = TRUE,
conf.int = TRUE,
palette = colors,    # Use the updated colors vector
legend.labs = labels,
xlab = "Months",
ylab = "Overall Survival Probability",
break.time.by = 6,
ggtheme = theme_minimal() +
theme(
legend.position = "right",  # Position the legend
legend.text = element_text(size = 12),
legend.title = element_text(size = 12),
plot.margin = unit(c(1, 4, 1, 1), "cm"),
panel.border = element_rect(color = "black", fill = NA, size = 1)
),
ylim = c(0.4, 1)  # Set y-axis limits
)
p1 <- ggsurv$plot +
theme(
legend.position = "bottom",
legend.text = element_text(size = 10),  # Reduce text size
legend.title = element_text(size = 10),  # Adjust title size if needed
legend.key.size = unit(0.4, "cm")  # Reduce key size (legend boxes)
) +
guides(colour = guide_legend(nrow = 2, byrow = TRUE,
title.position = "top",
title.hjust = 0.5,  # Center the title
label.position = "right",  # Adjust label positions
label.hjust = 0)) +
ylab("Probability of protective effectiveness against infection") + theme(plot.margin=grid::unit(c(0,0,0,0), "mm"))
# ggsave("Results/plots_updated/fig3(1).pdf", plot = p1, width = 10, height = 6)
p1
# Load data
url <- "Code/TempData/cox_hazard_data.rds"
data <- readRDS(url)
library(survival)
library(survminer)
library(dplyr)
# Load data
url <- "Code/TempData/cox_hazard_data.rds"
data <- readRDS(url)
data <- readRDS(url)
list.files()
# Load data
url <- "Code\TempData\cox_hazard_data.rds"
data <- readRDS(url)
# Load data
url <- "Code\TempData\cox_hazard_data.rds"
# Load data
url <- "\Code\TempData\cox_hazard_data.rds"
# Load data
url <- "Code//TempData//cox_hazard_data.rds"
data <- readRDS(url)
list.files()
# Load data
url <- "Code/TempData/cox_hazard_data.rds"
# Load data
url <- "Code/TempData/cox_hazard_data.rds"
list.files()
# Load data
url <- "/Code/TempData/cox_hazard_data.rds"
data <- readRDS(url)
# Load data
url <- "Code/TempData/cox_hazard_data.rds"
data <- readRDS(url)
list.files()
list.files()
# Load data
url <- "Code/TempData/cox_hazard_data.rds"
data <- readRDS(url)
# Load data
url <- "C:/Users/yizhamg/Dropbox/Jo_Franky/2023_South_Korea_Seroprevalence/Code/TempData/cox_hazard_data.rds"
data <- readRDS(url)
